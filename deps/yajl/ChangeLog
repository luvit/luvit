2.0.4
     * @jcekstrom - additional checking in integer parsing
     * @jcekstrom - fix a bug in yajl_tree that would cause valid json integersto fail to parse
     * @plaguemorin - fix a memory leak in yajl_tree (error strings were being leaked)
     * @7AC - reset errno
     * @ConradIrwin - include flags to reformatter to allow toggling of escape solidus option

2.0.3
     * John Stamp generation of a pkgconfig file at build time.
     * @robzuber bugfix in yajl_tree_get()
     * @lloyd - fix for compilation on 64 bit windows

2.0.2
     * lth fix typos in yajl_tree.h macros YAJL_IS_INTEGER and YAJL_IS_DOUBLE,
	contributed by Artem S Vybornov.
     * lth add #ifdef __cplusplus wrappers to yajl_tree to allow proper
	usage from many populer C++ compilers.

2.0.1
     * lth generator flag to allow client to specify they want
	escaped solidi '/'.  issue #28
     * lth crash fix when yajl_parse() is never called. issue #27

2.0.0
     * lth YAJL is now ISC licensed: http://en.wikipedia.org/wiki/ISC_license
     * lth 20-35% (osx and linux respectively) parsing performance
	improvement attained by tweaking string scanning (idea: @michaelrhanson).
     * Florian Forster & lth - yajl_tree interface introduced as a higher level
	interface to the parser (eats JSON, poops a memory representation)
     * lth require a C99 compiler
     * lth integers are now represented with long long (64bit+) on all platforms.
     * lth size_t now used throughout to represent buffer lengths, so you can
	safely manage buffers greater than 4GB.
     * gno semantic improvements to yajl's API regarding partial value parsing and
	trailing garbage
     * lth new configuration mechanism for yajl, see yajl_config() and
	yajl_gen_config()
     * gno more allocation checking in more places
     * gno remove usage of strtol, replace with custom implementation that cares
	not about your locale.
     * lth yajl_parse_complete renamed to yajl_complete_parse.
     * lth add a switch to validate utf8 strings as they are generated.
     * lth tests are a lot quieter in their output.
     * lth addition of a little in tree performance benchmark, `perftest` in
	perf/perftest.c

1.0.12
     * Conrad Irwin - Parse null bytes correctly
     * Mirek Rusin - fix LLVM warnings
     * gno - Don't generate numbers for keys. closes #13
     * lth - various win32 fixes, including build documentation improvements
     * John Stamp - Don't export private symbols.
     * John Stamp - Install yajl_version.h, not the template.
     * John Stamp - Don't use -fPIC for static lib.  Cmake will automatically add it for the shared.
     * lth 0 fix paths embedded in dylib upon installation on osx.  closes #11

1.0.11
     * lth remove -Wno-missing-field-initializers for greater gcc compat (3.4.6)

1.0.10
     * Brian Maher - yajl is now buildable without a c++ compiler present
     * Brian Maher - fix header installation on OSX with cmake 2.8.0 installed
     * lth & vitali - allow builder to specify alternate lib directory
	for installation (i.e. lib64) 
     * Vitali Lovich - yajl version number now programatically accessible
     * lth - prevent cmake from embedding rpaths in binaries.  Static linking
	makes this unneccesary.

1.0.9
     * lth - fix inverted logic causing yajl_gen_double() to always fail on
	win32 (thanks to Fredrik Kihlander for the report) 

1.0.8
     * Randall E. Barker - move dllexport defnitions so dlls with proper
	exports can again be generated on windows 
     * lth - add yajl_get_bytes_consumed() which allows the client to
	determine the offset as an error, as well as determine how
	many bytes of an input buffer were consumed.
     * lth - fixes to keep "error offset" up to date (like when the
	client callback returns 0)
     * Brian Maher - allow client to specify a printing function in
       generation

1.0.7
     * lth fix win32 build (isinf and isnan)

1.0.6
     * lth fix several compiler warnings
     * lth fix generation of invalid json from yajl_gen_double
	(NaN is not JSON)
     * jstamp support for combining short options in tools
     * jstamp exit properly on errors from tools
     * octo test success no longer depends on integer size
     * max fix configure --prefix

1.0.5
     * lth several performance improvements related to function
	inlinin'

1.0.4
     * lth fix broken utf8 validation for three & four byte represenations.
	thanks to http://github.com/brianmario and
	http://github.com/technoweenie

1.0.3
     * lth fix syntax error in cplusplus extern "C" statements for wider
	compiler support

1.0.2
     * lth update doxygen documentation with new sample code, passing NULL
	for allocation functions added in 1.0.0

1.0.1
     * lth resolve crash in json_reformatter due to incorrectly ordered
	parameters.

1.0.0
     * lth add 'make install' rules, thaks to Andrei Soroker for the
	contribution.
     * lth client may override allocation routines at generator or parser
	allocation time
     * tjw add yajl_parse_complete routine to allow client to explicitly
	specify end-of-input, solving the "lonely number" case, where
	json text consists only of an element with no explicit syntactic
	end.
     * tjw many new test cases	
     * tjw cleanup of code for symmetry and ease of reading
     * lth integration of patches from Robert Varga which cleanup
	compilation warnings on 64 bit linux

0.4.0
     * lth buffer overflow bug in yajl_gen_double s/%lf/%g/ - thanks to
	Eric Bergstrome
     * lth yajl_number callback to allow passthrough of arbitrary precision
	numbers to client.  Thanks to Hatem Nassrat.
     * lth yajl_integer now deals in long, instead of long long.  This
	combined with yajl_number improves compiler compatibility while
	maintaining precision.
     * lth better ./configure && make experience (still requires cmake and
	ruby)
     * lth fix handling of special characters hex 0F and 1F in yajl_encode
	(thanks to Robert Geiger)
     * lth allow leading zeros in exponents (thanks to Hatem Nassrat)

0.3.0
     * lth doxygen documentation (html & man) generated as part of the
	build
     * lth many documentation updates.
     * lth fix to work with older versions of cmake (don't use LOOSE_LOOP
	constructs)
     * lth work around different behavior of freebsd 4 scanf.  initialize
	parameter to scanf to zero.
     * lth all tests run 32x with ranging buffer sizes to stress stream
        parsing
     * lth yajl_test accepts -b option to allow read buffer size to be
        set
     * lth option to validate UTF8 added to parser (argument in
        yajl_parser_cfg)
     * lth fix buffer overrun when chunk ends inside \u escaped text
     * lth support client cancelation

0.2.2
     * lth on windows build debug with C7 symbols and no pdb files.

0.2.1
     * fix yajl_reformat and yajl_verify to work on arbitrarily sized
        inputs.
     * fix win32 build break, clean up all errors and warnings.
     * fix optimized build flags.

0.2.0
     * optionally support comments in input text

0.1.0
     * Initial release
